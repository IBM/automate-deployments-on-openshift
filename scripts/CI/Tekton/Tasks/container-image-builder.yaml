apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: container-image-builder
spec:
  params:
    - description: GitHub source code repository URL
      name: gitUrl
      type: string
    - description: GitHub branch
      name: gitRevision
      type: string
    - description: Reference of the image buildah will produce.
      name: IMAGE
      type: string
    - default: >-
        registry.redhat.io/rhel8/buildah@sha256:e19cf23d5f1e0608f5a897f0a50448beb9f8387031cca49c7487ec71bd91c4d3
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: vfs
      description: Set buildah storage driver
      name: STORAGE_DRIVER
      type: string
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: .
      description: Path to the directory to use as context.
      name: CONTEXT
      type: string
    - default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: oci
      description: 'The format of the built container, oci or docker'
      name: FORMAT
      type: string
    - default: ''
      description: Extra parameters passed for the build command when building images.
      name: BUILD_EXTRA_ARGS
      type: string
    - default: ''
      description: Extra parameters passed for the push command when pushing images.
      name: PUSH_EXTRA_ARGS
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
  steps:
    - image: >-
        registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:da1aedf0b17f2b9dd2a46edc93ff1c0582989414b902a28cd79bad8a035c9ea4
      name: git-clone
      resources: {}
      script: |
        #!/usr/bin/env sh

        echo "------Cloning source code repo------"
        git clone -b $(params.gitRevision) $(params.gitUrl) ./ || exit 1
        echo "-------------------------------------"
      workingDir: $(workspaces.source.path)
    - image: $(params.BUILDER_IMAGE)
      name: build
      resources: {}
      script: |
        #!/usr/bin/env sh

        echo "-------------Building Container Image-------------"
        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          --no-cache -f $(params.DOCKERFILE) -t $(params.IMAGE) . || exit 1
        echo "--------------------------------------------------"
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
    - image: $(params.BUILDER_IMAGE)
      name: push
      resources: {}
      script: |
        #!/usr/bin/env sh

        echo "-------------Pushing Image to Container Registry-------------"
        buildah --storage-driver=$(params.STORAGE_DRIVER) push $(params.IMAGE) || exit 1
        echo "-------------------------------------------------------------"
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
  volumes:
    - emptyDir: {}
      name: varlibcontainers
  workspaces:
    - name: source
